{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNEiL8ahUDSzHWbG19/pC4B"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"20f476caa1114a9fb80addf4e7490044":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_4b1fb6ccd2ec47bab1f92fb1dff8d376","IPY_MODEL_1c52da3c108f484a812ac540b1267a35","IPY_MODEL_54d88a94810c4b10a709c9c39570ea21"],"layout":"IPY_MODEL_e1dfceb45d8f44f69f4d0567cb698958"}},"4b1fb6ccd2ec47bab1f92fb1dff8d376":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_03dd1b989e5f4f5b8bcf6cf854485129","placeholder":"​","style":"IPY_MODEL_07b93a80b9b34a1687d39f425267eff1","value":"Summarize dataset: 100%"}},"1c52da3c108f484a812ac540b1267a35":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_0635c38715744543bef4e1884fc5f233","max":5,"min":0,"orientation":"horizontal","style":"IPY_MODEL_81acfe8f6b2b4711a1a75e3b04a1db2e","value":5}},"54d88a94810c4b10a709c9c39570ea21":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_852b87e28b53446197ee1e3c4ade220e","placeholder":"​","style":"IPY_MODEL_b80d8c594e96443d8f0045d0a186eed5","value":" 30/30 [00:13&lt;00:00,  2.52it/s, Completed]"}},"e1dfceb45d8f44f69f4d0567cb698958":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"03dd1b989e5f4f5b8bcf6cf854485129":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"07b93a80b9b34a1687d39f425267eff1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"0635c38715744543bef4e1884fc5f233":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"81acfe8f6b2b4711a1a75e3b04a1db2e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"852b87e28b53446197ee1e3c4ade220e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b80d8c594e96443d8f0045d0a186eed5":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2c5fcfe932634bd4bf101877203ef73b":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3592de5e67244aedb5c839478d040cb3","IPY_MODEL_4779893a220940f6a157541a6c52c9c9","IPY_MODEL_8c927748153c4f6a93b960e3f29472a6"],"layout":"IPY_MODEL_5527db85f2614c3cb7173f32a4f89ff8"}},"3592de5e67244aedb5c839478d040cb3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_82e78a51503646928fbcf590a4687e23","placeholder":"​","style":"IPY_MODEL_e7eeb34afbad4d96b3bfc301ee2b522e","value":"Generate report structure: 100%"}},"4779893a220940f6a157541a6c52c9c9":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cb541e87038349c2831c71690d5073c1","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_f4fe6b3bfeac42f99c76875c64c14d57","value":1}},"8c927748153c4f6a93b960e3f29472a6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ae91bbcfc7a1463285f3487f8f561aff","placeholder":"​","style":"IPY_MODEL_a42b7144ffe44de4b12aea85c2a2b26a","value":" 1/1 [00:09&lt;00:00,  9.89s/it]"}},"5527db85f2614c3cb7173f32a4f89ff8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"82e78a51503646928fbcf590a4687e23":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e7eeb34afbad4d96b3bfc301ee2b522e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cb541e87038349c2831c71690d5073c1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f4fe6b3bfeac42f99c76875c64c14d57":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"ae91bbcfc7a1463285f3487f8f561aff":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a42b7144ffe44de4b12aea85c2a2b26a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2c4a151f2e6f4218b8f91ef09af31450":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0cfefa353c684655a0f2f198be1bd091","IPY_MODEL_72fdd2cefdaf4571b79bcdefcd4b8c1e","IPY_MODEL_783c6eb64293459c976d4f77f1d993b4"],"layout":"IPY_MODEL_51c46aa8a9a041ba8757ce73ff0b133b"}},"0cfefa353c684655a0f2f198be1bd091":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_5f7fcd5c5b3549dca1f535ee948b4ccc","placeholder":"​","style":"IPY_MODEL_62a278ec4a2c4a498c050f0f54364034","value":"Render HTML: 100%"}},"72fdd2cefdaf4571b79bcdefcd4b8c1e":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ac483e56fba14152950d762de261a637","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_564f10150c2d46399f7a08ee05237c93","value":1}},"783c6eb64293459c976d4f77f1d993b4":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d9dd5fc895ce4f58b8c604b58daea8d1","placeholder":"​","style":"IPY_MODEL_dbc59c9728cb4111af3c406fc3b47524","value":" 1/1 [00:01&lt;00:00,  1.08s/it]"}},"51c46aa8a9a041ba8757ce73ff0b133b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5f7fcd5c5b3549dca1f535ee948b4ccc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"62a278ec4a2c4a498c050f0f54364034":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ac483e56fba14152950d762de261a637":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"564f10150c2d46399f7a08ee05237c93":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d9dd5fc895ce4f58b8c604b58daea8d1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dbc59c9728cb4111af3c406fc3b47524":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"-AEDDZB-JYYL"},"outputs":[],"source":["# In this checkpoint, we are going to work on the 'Electric Vehicle Data' dataset that was provided by Kaggle as part of the Electric Vehicle Price Prediction competition.\n","\n","# Dataset description: This dataset contains information on the Battery Electric Vehicles (BEVs) and Plug-in Hybrid Electric Vehicles (PHEVs) that are currently registered with the Washington State Department of Licensing (DOL). This dataset was introduced as part of an official invitation-based competition on Kaggle. Our SVM model should answer the question \"This is my car's model & make, along with a few other parameters, what price can this vehicle be brought or sold?”\n","\n","# ➡️ Dataset link\n","\n","# https://i.imgur.com/IpuCW3s.jpg\n","\n","# ➡️Columns explanation\n","\n","\n","\n","\n","# Instructions\n","\n","# Import you data and perform basic data exploration phase\n","# Display general information about the dataset\n","# Create a pandas profiling reports to gain insights into the dataset\n","# Handle Missing and corrupted values\n","# Remove duplicates, if they exist\n","# Handle outliers, if they exist\n","# Encode categorical features\n","# Select your target variable and the features\n","# Split your dataset to training and test sets\n","# Build and train an SVM model on the training set\n","# Assess your model performance on the test set using relevant evaluation metrics\n","# Discuss with your cohort alternative ways to improve your model performance"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"115db579-48ce-4386-b9da-8399c48580de"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from ydata_profiling import ProfileReport\n","from scipy.stats import zscore\n","from sklearn.preprocessing import StandardScaler\n","from sklearn.preprocessing import LabelEncoder\n","from sklearn.model_selection import train_test_split\n","from sklearn.svm import SVR\n","from sklearn.metrics import mean_absolute_error, mean_squared_error, r2_score"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ddb367da-bede-490b-a01b-cea5a6982ba1"},"outputs":[],"source":["df = pd.read_csv(r\"Electric_cars_dataset.csv\")"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e878e4e1-ae8b-4ee3-8765-39d0ece6a6db","outputId":"6fbc42b4-910a-48dd-cb65-7edc05ed1e3a","colab":{"base_uri":"https://localhost:8080/","height":591},"executionInfo":{"status":"ok","timestamp":1721733535335,"user_tz":-60,"elapsed":1265,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["        ID  VIN (1-10)     County        City State  ZIP Code  Model Year  \\\n","0  EV33174  5YJ3E1EC6L  Snohomish    LYNNWOOD    WA   98037.0      2020.0   \n","1  EV40247  JN1AZ0CP8B     Skagit  BELLINGHAM    WA   98229.0      2011.0   \n","2  EV12248  WBY1Z2C56F     Pierce      TACOMA    WA   98422.0      2015.0   \n","3  EV55713  1G1RD6E44D       King     REDMOND    WA   98053.0      2013.0   \n","4  EV28799  1G1FY6S05K     Pierce    PUYALLUP    WA   98375.0      2019.0   \n","\n","        Make    Model                   Electric Vehicle Type  \\\n","0      TESLA  MODEL 3          Battery Electric Vehicle (BEV)   \n","1     NISSAN     LEAF          Battery Electric Vehicle (BEV)   \n","2        BMW       I3          Battery Electric Vehicle (BEV)   \n","3  CHEVROLET     VOLT  Plug-in Hybrid Electric Vehicle (PHEV)   \n","4  CHEVROLET  BOLT EV          Battery Electric Vehicle (BEV)   \n","\n","  Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","0           Clean Alternative Fuel Vehicle Eligible             308   \n","1           Clean Alternative Fuel Vehicle Eligible              73   \n","2           Clean Alternative Fuel Vehicle Eligible              81   \n","3           Clean Alternative Fuel Vehicle Eligible              38   \n","4           Clean Alternative Fuel Vehicle Eligible             238   \n","\n","   Base MSRP  Legislative District  DOL Vehicle ID  \\\n","0          0                  32.0       109821694   \n","1          0                  40.0       137375528   \n","2          0                  27.0       150627382   \n","3          0                  45.0       258766301   \n","4          0                  25.0       296998138   \n","\n","                Vehicle Location  \\\n","0   POINT (-122.287614 47.83874)   \n","1  POINT (-122.414936 48.709388)   \n","2  POINT (-122.396286 47.293138)   \n","3  POINT (-122.024951 47.670286)   \n","4  POINT (-122.321062 47.103797)   \n","\n","                                    Electric Utility Expected Price ($1k)  \n","0                             PUGET SOUND ENERGY INC                   50  \n","1                             PUGET SOUND ENERGY INC                   15  \n","2  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                   18  \n","3      PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)                 33.9  \n","4  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                41.78  "],"text/html":["\n","  <div id=\"df-92a38864-8619-418c-98ad-e2d112a7a838\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>VIN (1-10)</th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>ZIP Code</th>\n","      <th>Model Year</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Electric Range</th>\n","      <th>Base MSRP</th>\n","      <th>Legislative District</th>\n","      <th>DOL Vehicle ID</th>\n","      <th>Vehicle Location</th>\n","      <th>Electric Utility</th>\n","      <th>Expected Price ($1k)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>EV33174</td>\n","      <td>5YJ3E1EC6L</td>\n","      <td>Snohomish</td>\n","      <td>LYNNWOOD</td>\n","      <td>WA</td>\n","      <td>98037.0</td>\n","      <td>2020.0</td>\n","      <td>TESLA</td>\n","      <td>MODEL 3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>308</td>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>109821694</td>\n","      <td>POINT (-122.287614 47.83874)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>EV40247</td>\n","      <td>JN1AZ0CP8B</td>\n","      <td>Skagit</td>\n","      <td>BELLINGHAM</td>\n","      <td>WA</td>\n","      <td>98229.0</td>\n","      <td>2011.0</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>73</td>\n","      <td>0</td>\n","      <td>40.0</td>\n","      <td>137375528</td>\n","      <td>POINT (-122.414936 48.709388)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>EV12248</td>\n","      <td>WBY1Z2C56F</td>\n","      <td>Pierce</td>\n","      <td>TACOMA</td>\n","      <td>WA</td>\n","      <td>98422.0</td>\n","      <td>2015.0</td>\n","      <td>BMW</td>\n","      <td>I3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>81</td>\n","      <td>0</td>\n","      <td>27.0</td>\n","      <td>150627382</td>\n","      <td>POINT (-122.396286 47.293138)</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>EV55713</td>\n","      <td>1G1RD6E44D</td>\n","      <td>King</td>\n","      <td>REDMOND</td>\n","      <td>WA</td>\n","      <td>98053.0</td>\n","      <td>2013.0</td>\n","      <td>CHEVROLET</td>\n","      <td>VOLT</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>45.0</td>\n","      <td>258766301</td>\n","      <td>POINT (-122.024951 47.670286)</td>\n","      <td>PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)</td>\n","      <td>33.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>EV28799</td>\n","      <td>1G1FY6S05K</td>\n","      <td>Pierce</td>\n","      <td>PUYALLUP</td>\n","      <td>WA</td>\n","      <td>98375.0</td>\n","      <td>2019.0</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>238</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>296998138</td>\n","      <td>POINT (-122.321062 47.103797)</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>41.78</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-92a38864-8619-418c-98ad-e2d112a7a838')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-92a38864-8619-418c-98ad-e2d112a7a838 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-92a38864-8619-418c-98ad-e2d112a7a838');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8376a29d-ff36-400a-becf-46badea10037\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8376a29d-ff36-400a-becf-46badea10037')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8376a29d-ff36-400a-becf-46badea10037 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 64353,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64353,\n        \"samples\": [\n          \"EV45181\",\n          \"EV69055\",\n          \"EV60667\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIN (1-10)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5644,\n        \"samples\": [\n          \"WA1LABGE2N\",\n          \"5YJSA1AC3D\",\n          \"WBY1Z8C52H\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"County\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"Albemarle\",\n          \"Newport\",\n          \"Marin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 544,\n        \"samples\": [\n          \"ELECTRIC CITY\",\n          \"TOPPENISH\",\n          \"PALOUSE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"MT\",\n          \"WI\",\n          \"IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"ZIP Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2856.0643293673843,\n        \"min\": 745.0,\n        \"max\": 99701.0,\n        \"num_unique_values\": 678,\n        \"samples\": [\n          78154.0,\n          98002.0,\n          98604.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7267416763887606,\n        \"min\": 1993.0,\n        \"max\": 2022.0,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2020.0,\n          2016.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"HONDA\",\n          \"FIAT\",\n          \"DODGE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 107,\n        \"samples\": [\n          \"530E XDRIVE\",\n          \"RANGE ROVER SPORT\",\n          \"BOLT EV\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Vehicle Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Plug-in Hybrid Electric Vehicle (PHEV)\",\n          \"Battery Electric Vehicle (BEV)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Clean Alternative Fuel Vehicle Eligible\",\n          \"Not eligible due to low battery range\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104,\n        \"min\": 0,\n        \"max\": 337,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          20,\n          200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Base MSRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12402,\n        \"min\": 0,\n        \"max\": 845000,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          32250,\n          64950\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Legislative District\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.661123626483931,\n        \"min\": 0.0,\n        \"max\": 49.0,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          21.0,\n          16.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOL Vehicle ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106946647,\n        \"min\": 4385,\n        \"max\": 478934571,\n        \"num_unique_values\": 64353,\n        \"samples\": [\n          166559368,\n          3595182\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vehicle Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 668,\n        \"samples\": [\n          \"POINT (-121.618012 47.823355)\",\n          \"POINT (-122.02812 47.393554)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Utility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"BONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF CLALLAM COUNTY|PUD NO 1 OF JEFFERSON COUNTY\",\n          \"AVISTA CORP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Expected Price ($1k)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 210,\n        \"samples\": [\n          \"38\",\n          \"102.4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":5}],"source":["df.head(5)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dafe017f-d01a-4f06-a78b-656f27dd27b5","outputId":"e0a1e9ec-afab-4369-a1b0-a8d1f18174c8","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733546816,"user_tz":-60,"elapsed":487,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 64353 entries, 0 to 64352\n","Data columns (total 18 columns):\n"," #   Column                                             Non-Null Count  Dtype  \n","---  ------                                             --------------  -----  \n"," 0   ID                                                 64353 non-null  object \n"," 1   VIN (1-10)                                         64353 non-null  object \n"," 2   County                                             64349 non-null  object \n"," 3   City                                               64344 non-null  object \n"," 4   State                                              64342 non-null  object \n"," 5   ZIP Code                                           64347 non-null  float64\n"," 6   Model Year                                         64346 non-null  float64\n"," 7   Make                                               64349 non-null  object \n"," 8   Model                                              64340 non-null  object \n"," 9   Electric Vehicle Type                              64353 non-null  object \n"," 10  Clean Alternative Fuel Vehicle (CAFV) Eligibility  64353 non-null  object \n"," 11  Electric Range                                     64353 non-null  int64  \n"," 12  Base MSRP                                          64353 non-null  int64  \n"," 13  Legislative District                               64184 non-null  float64\n"," 14  DOL Vehicle ID                                     64353 non-null  int64  \n"," 15  Vehicle Location                                   63843 non-null  object \n"," 16  Electric Utility                                   63631 non-null  object \n"," 17  Expected Price ($1k)                               64353 non-null  object \n","dtypes: float64(3), int64(3), object(12)\n","memory usage: 8.8+ MB\n"]}],"source":["df.info()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"225bce82-dbc2-462c-81c6-4d426cf92ec3","outputId":"c804d003-f068-4a91-84d5-5823f6689728","colab":{"base_uri":"https://localhost:8080/","height":300},"executionInfo":{"status":"ok","timestamp":1721733548739,"user_tz":-60,"elapsed":478,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["           ZIP Code    Model Year  Electric Range      Base MSRP  \\\n","count  64347.000000  64346.000000    64353.000000   64353.000000   \n","mean   98143.452888   2018.186212      106.948985    2524.990754   \n","std     2856.064329      2.726742      104.093919   12402.895104   \n","min      745.000000   1993.000000        0.000000       0.000000   \n","25%    98052.000000   2017.000000       14.000000       0.000000   \n","50%    98121.000000   2018.000000       73.000000       0.000000   \n","75%    98370.000000   2021.000000      215.000000       0.000000   \n","max    99701.000000   2022.000000      337.000000  845000.000000   \n","\n","       Legislative District  DOL Vehicle ID  \n","count          64184.000000    6.435300e+04  \n","mean              29.951904    1.972905e+08  \n","std               14.661124    1.069466e+08  \n","min                0.000000    4.385000e+03  \n","25%               19.000000    1.372865e+08  \n","50%               34.000000    1.753776e+08  \n","75%               43.000000    2.299039e+08  \n","max               49.000000    4.789346e+08  "],"text/html":["\n","  <div id=\"df-dbc38995-9958-4111-b933-f8fed7e4c9e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ZIP Code</th>\n","      <th>Model Year</th>\n","      <th>Electric Range</th>\n","      <th>Base MSRP</th>\n","      <th>Legislative District</th>\n","      <th>DOL Vehicle ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>64347.000000</td>\n","      <td>64346.000000</td>\n","      <td>64353.000000</td>\n","      <td>64353.000000</td>\n","      <td>64184.000000</td>\n","      <td>6.435300e+04</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>98143.452888</td>\n","      <td>2018.186212</td>\n","      <td>106.948985</td>\n","      <td>2524.990754</td>\n","      <td>29.951904</td>\n","      <td>1.972905e+08</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2856.064329</td>\n","      <td>2.726742</td>\n","      <td>104.093919</td>\n","      <td>12402.895104</td>\n","      <td>14.661124</td>\n","      <td>1.069466e+08</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>745.000000</td>\n","      <td>1993.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>4.385000e+03</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>98052.000000</td>\n","      <td>2017.000000</td>\n","      <td>14.000000</td>\n","      <td>0.000000</td>\n","      <td>19.000000</td>\n","      <td>1.372865e+08</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>98121.000000</td>\n","      <td>2018.000000</td>\n","      <td>73.000000</td>\n","      <td>0.000000</td>\n","      <td>34.000000</td>\n","      <td>1.753776e+08</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>98370.000000</td>\n","      <td>2021.000000</td>\n","      <td>215.000000</td>\n","      <td>0.000000</td>\n","      <td>43.000000</td>\n","      <td>2.299039e+08</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>99701.000000</td>\n","      <td>2022.000000</td>\n","      <td>337.000000</td>\n","      <td>845000.000000</td>\n","      <td>49.000000</td>\n","      <td>4.789346e+08</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dbc38995-9958-4111-b933-f8fed7e4c9e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dbc38995-9958-4111-b933-f8fed7e4c9e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dbc38995-9958-4111-b933-f8fed7e4c9e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-34b359f2-02c1-46c4-a6c5-c7724ac00ccb\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-34b359f2-02c1-46c4-a6c5-c7724ac00ccb')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-34b359f2-02c1-46c4-a6c5-c7724ac00ccb button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"ZIP Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 43741.56416031976,\n        \"min\": 745.0,\n        \"max\": 99701.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          98143.45288824654,\n          98121.0,\n          64347.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22150.20821872975,\n        \"min\": 2.7267416763887606,\n        \"max\": 64346.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2018.1862120411524,\n          2018.0,\n          64346.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22709.55305952902,\n        \"min\": 0.0,\n        \"max\": 64353.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          106.94898450732677,\n          73.0,\n          64353.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Base MSRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 295571.993042768,\n        \"min\": 0.0,\n        \"max\": 845000.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2524.990754121797,\n          845000.0,\n          12402.895104079149\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Legislative District\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22682.89940615383,\n        \"min\": 0.0,\n        \"max\": 64184.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          29.95190390128381,\n          34.0,\n          64184.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOL Vehicle ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 152352567.85788137,\n        \"min\": 4385.0,\n        \"max\": 478934571.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          197290491.26412132,\n          175377597.0,\n          64353.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":7}],"source":["df.describe()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2e7fa9b8-9c0b-495f-a1ec-7b3a84d5d80d","outputId":"7438b37e-2b21-4fa1-a2be-deecb544aaa5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733550617,"user_tz":-60,"elapsed":413,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(64353, 18)"]},"metadata":{},"execution_count":8}],"source":["df.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"scrolled":true,"id":"a5ae1e1d-cb36-4029-8bd1-01eaaa97c83a","outputId":"d130ee24-a61d-48f1-a984-6cbd0c00403c","colab":{"base_uri":"https://localhost:8080/","height":424},"executionInfo":{"status":"ok","timestamp":1721733551985,"user_tz":-60,"elapsed":4,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       ZIP Code  Model Year  Electric Range  Base MSRP  Legislative District  \\\n","0       98037.0      2020.0             308          0                  32.0   \n","1       98229.0      2011.0              73          0                  40.0   \n","2       98422.0      2015.0              81          0                  27.0   \n","3       98053.0      2013.0              38          0                  45.0   \n","4       98375.0      2019.0             238          0                  25.0   \n","...         ...         ...             ...        ...                   ...   \n","64348   98144.0      2020.0             239          0                  37.0   \n","64349   98402.0      2013.0               6          0                  27.0   \n","64350   98119.0      2018.0             238          0                  36.0   \n","64351   98115.0      2017.0              14          0                  46.0   \n","64352   98591.0      2019.0             150          0                  20.0   \n","\n","       DOL Vehicle ID  \n","0           109821694  \n","1           137375528  \n","2           150627382  \n","3           258766301  \n","4           296998138  \n","...               ...  \n","64348       156575107  \n","64349       211048701  \n","64350       135543411  \n","64351       192459907  \n","64352       477551595  \n","\n","[64353 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-6eb212bc-d31d-4d8f-8e61-40216fec3c13\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ZIP Code</th>\n","      <th>Model Year</th>\n","      <th>Electric Range</th>\n","      <th>Base MSRP</th>\n","      <th>Legislative District</th>\n","      <th>DOL Vehicle ID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>98037.0</td>\n","      <td>2020.0</td>\n","      <td>308</td>\n","      <td>0</td>\n","      <td>32.0</td>\n","      <td>109821694</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>98229.0</td>\n","      <td>2011.0</td>\n","      <td>73</td>\n","      <td>0</td>\n","      <td>40.0</td>\n","      <td>137375528</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>98422.0</td>\n","      <td>2015.0</td>\n","      <td>81</td>\n","      <td>0</td>\n","      <td>27.0</td>\n","      <td>150627382</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>98053.0</td>\n","      <td>2013.0</td>\n","      <td>38</td>\n","      <td>0</td>\n","      <td>45.0</td>\n","      <td>258766301</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>98375.0</td>\n","      <td>2019.0</td>\n","      <td>238</td>\n","      <td>0</td>\n","      <td>25.0</td>\n","      <td>296998138</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>64348</th>\n","      <td>98144.0</td>\n","      <td>2020.0</td>\n","      <td>239</td>\n","      <td>0</td>\n","      <td>37.0</td>\n","      <td>156575107</td>\n","    </tr>\n","    <tr>\n","      <th>64349</th>\n","      <td>98402.0</td>\n","      <td>2013.0</td>\n","      <td>6</td>\n","      <td>0</td>\n","      <td>27.0</td>\n","      <td>211048701</td>\n","    </tr>\n","    <tr>\n","      <th>64350</th>\n","      <td>98119.0</td>\n","      <td>2018.0</td>\n","      <td>238</td>\n","      <td>0</td>\n","      <td>36.0</td>\n","      <td>135543411</td>\n","    </tr>\n","    <tr>\n","      <th>64351</th>\n","      <td>98115.0</td>\n","      <td>2017.0</td>\n","      <td>14</td>\n","      <td>0</td>\n","      <td>46.0</td>\n","      <td>192459907</td>\n","    </tr>\n","    <tr>\n","      <th>64352</th>\n","      <td>98591.0</td>\n","      <td>2019.0</td>\n","      <td>150</td>\n","      <td>0</td>\n","      <td>20.0</td>\n","      <td>477551595</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>64353 rows × 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6eb212bc-d31d-4d8f-8e61-40216fec3c13')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6eb212bc-d31d-4d8f-8e61-40216fec3c13 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6eb212bc-d31d-4d8f-8e61-40216fec3c13');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5fd65161-9a1f-4278-a54d-25e88395767c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5fd65161-9a1f-4278-a54d-25e88395767c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5fd65161-9a1f-4278-a54d-25e88395767c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 64353,\n  \"fields\": [\n    {\n      \"column\": \"ZIP Code\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2856.0643293673843,\n        \"min\": 745.0,\n        \"max\": 99701.0,\n        \"num_unique_values\": 678,\n        \"samples\": [\n          78154.0,\n          98002.0,\n          98604.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7267416763887606,\n        \"min\": 1993.0,\n        \"max\": 2022.0,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2020.0,\n          2016.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104,\n        \"min\": 0,\n        \"max\": 337,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          20,\n          200,\n          57\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Base MSRP\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12402,\n        \"min\": 0,\n        \"max\": 845000,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          32250,\n          64950,\n          34995\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Legislative District\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 14.661123626483931,\n        \"min\": 0.0,\n        \"max\": 49.0,\n        \"num_unique_values\": 50,\n        \"samples\": [\n          21.0,\n          16.0,\n          7.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"DOL Vehicle ID\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106946647,\n        \"min\": 4385,\n        \"max\": 478934571,\n        \"num_unique_values\": 64353,\n        \"samples\": [\n          166559368,\n          3595182,\n          180632266\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":9}],"source":["df.select_dtypes( include = np.number )"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"5e42e4eb-0f4c-4f0b-befd-63c1feb1b0a2","outputId":"68723115-c29f-4070-d7ba-378e1d99a0ba","colab":{"base_uri":"https://localhost:8080/","height":806},"executionInfo":{"status":"ok","timestamp":1721733553985,"user_tz":-60,"elapsed":414,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["            ID  VIN (1-10)     County        City State       Make  \\\n","0      EV33174  5YJ3E1EC6L  Snohomish    LYNNWOOD    WA      TESLA   \n","1      EV40247  JN1AZ0CP8B     Skagit  BELLINGHAM    WA     NISSAN   \n","2      EV12248  WBY1Z2C56F     Pierce      TACOMA    WA        BMW   \n","3      EV55713  1G1RD6E44D       King     REDMOND    WA  CHEVROLET   \n","4      EV28799  1G1FY6S05K     Pierce    PUYALLUP    WA  CHEVROLET   \n","...        ...         ...        ...         ...   ...        ...   \n","64348   EV6357  KNDCE3LG7L       King     SEATTLE    WA        KIA   \n","64349    EV423  JTDKN3DP2D     Pierce      TACOMA    WA     TOYOTA   \n","64350  EV27852  1G1FX6S05J       King     SEATTLE    WA  CHEVROLET   \n","64351    EV830  WP1AE2A24H       King     SEATTLE    WA    PORSCHE   \n","64352  EV11120  1N4BZ1CP8K      Lewis      TOLEDO    WA     NISSAN   \n","\n","               Model                   Electric Vehicle Type  \\\n","0            MODEL 3          Battery Electric Vehicle (BEV)   \n","1               LEAF          Battery Electric Vehicle (BEV)   \n","2                 I3          Battery Electric Vehicle (BEV)   \n","3               VOLT  Plug-in Hybrid Electric Vehicle (PHEV)   \n","4            BOLT EV          Battery Electric Vehicle (BEV)   \n","...              ...                                     ...   \n","64348           NIRO          Battery Electric Vehicle (BEV)   \n","64349  PRIUS PLUG-IN  Plug-in Hybrid Electric Vehicle (PHEV)   \n","64350        BOLT EV          Battery Electric Vehicle (BEV)   \n","64351        CAYENNE  Plug-in Hybrid Electric Vehicle (PHEV)   \n","64352           LEAF          Battery Electric Vehicle (BEV)   \n","\n","      Clean Alternative Fuel Vehicle (CAFV) Eligibility  \\\n","0               Clean Alternative Fuel Vehicle Eligible   \n","1               Clean Alternative Fuel Vehicle Eligible   \n","2               Clean Alternative Fuel Vehicle Eligible   \n","3               Clean Alternative Fuel Vehicle Eligible   \n","4               Clean Alternative Fuel Vehicle Eligible   \n","...                                                 ...   \n","64348           Clean Alternative Fuel Vehicle Eligible   \n","64349             Not eligible due to low battery range   \n","64350           Clean Alternative Fuel Vehicle Eligible   \n","64351             Not eligible due to low battery range   \n","64352           Clean Alternative Fuel Vehicle Eligible   \n","\n","                    Vehicle Location  \\\n","0       POINT (-122.287614 47.83874)   \n","1      POINT (-122.414936 48.709388)   \n","2      POINT (-122.396286 47.293138)   \n","3      POINT (-122.024951 47.670286)   \n","4      POINT (-122.321062 47.103797)   \n","...                              ...   \n","64348   POINT (-122.30033 47.585339)   \n","64349  POINT (-122.443211 47.252172)   \n","64350  POINT (-122.367721 47.639264)   \n","64351  POINT (-122.297534 47.685291)   \n","64352  POINT (-122.800917 46.444012)   \n","\n","                                        Electric Utility Expected Price ($1k)  \n","0                                 PUGET SOUND ENERGY INC                   50  \n","1                                 PUGET SOUND ENERGY INC                   15  \n","2      BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                   18  \n","3          PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)                 33.9  \n","4      BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                41.78  \n","...                                                  ...                  ...  \n","64348       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)                   33  \n","64349  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                 13.3  \n","64350       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)               22.857  \n","64351       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)                 45.7  \n","64352  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                   35  \n","\n","[64353 rows x 12 columns]"],"text/html":["\n","  <div id=\"df-0fd1374f-f2dd-4099-ba69-a0b9cc2e5599\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ID</th>\n","      <th>VIN (1-10)</th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Vehicle Location</th>\n","      <th>Electric Utility</th>\n","      <th>Expected Price ($1k)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>EV33174</td>\n","      <td>5YJ3E1EC6L</td>\n","      <td>Snohomish</td>\n","      <td>LYNNWOOD</td>\n","      <td>WA</td>\n","      <td>TESLA</td>\n","      <td>MODEL 3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.287614 47.83874)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>EV40247</td>\n","      <td>JN1AZ0CP8B</td>\n","      <td>Skagit</td>\n","      <td>BELLINGHAM</td>\n","      <td>WA</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.414936 48.709388)</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>EV12248</td>\n","      <td>WBY1Z2C56F</td>\n","      <td>Pierce</td>\n","      <td>TACOMA</td>\n","      <td>WA</td>\n","      <td>BMW</td>\n","      <td>I3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.396286 47.293138)</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>EV55713</td>\n","      <td>1G1RD6E44D</td>\n","      <td>King</td>\n","      <td>REDMOND</td>\n","      <td>WA</td>\n","      <td>CHEVROLET</td>\n","      <td>VOLT</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.024951 47.670286)</td>\n","      <td>PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)</td>\n","      <td>33.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>EV28799</td>\n","      <td>1G1FY6S05K</td>\n","      <td>Pierce</td>\n","      <td>PUYALLUP</td>\n","      <td>WA</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.321062 47.103797)</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>41.78</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>64348</th>\n","      <td>EV6357</td>\n","      <td>KNDCE3LG7L</td>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>KIA</td>\n","      <td>NIRO</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.30033 47.585339)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>64349</th>\n","      <td>EV423</td>\n","      <td>JTDKN3DP2D</td>\n","      <td>Pierce</td>\n","      <td>TACOMA</td>\n","      <td>WA</td>\n","      <td>TOYOTA</td>\n","      <td>PRIUS PLUG-IN</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Not eligible due to low battery range</td>\n","      <td>POINT (-122.443211 47.252172)</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>13.3</td>\n","    </tr>\n","    <tr>\n","      <th>64350</th>\n","      <td>EV27852</td>\n","      <td>1G1FX6S05J</td>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.367721 47.639264)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>22.857</td>\n","    </tr>\n","    <tr>\n","      <th>64351</th>\n","      <td>EV830</td>\n","      <td>WP1AE2A24H</td>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>PORSCHE</td>\n","      <td>CAYENNE</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Not eligible due to low battery range</td>\n","      <td>POINT (-122.297534 47.685291)</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>45.7</td>\n","    </tr>\n","    <tr>\n","      <th>64352</th>\n","      <td>EV11120</td>\n","      <td>1N4BZ1CP8K</td>\n","      <td>Lewis</td>\n","      <td>TOLEDO</td>\n","      <td>WA</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>POINT (-122.800917 46.444012)</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>35</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>64353 rows × 12 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0fd1374f-f2dd-4099-ba69-a0b9cc2e5599')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0fd1374f-f2dd-4099-ba69-a0b9cc2e5599 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0fd1374f-f2dd-4099-ba69-a0b9cc2e5599');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-dd6e9580-9718-45d5-910a-eefd3ac1f7a0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-dd6e9580-9718-45d5-910a-eefd3ac1f7a0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-dd6e9580-9718-45d5-910a-eefd3ac1f7a0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 64353,\n  \"fields\": [\n    {\n      \"column\": \"ID\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 64353,\n        \"samples\": [\n          \"EV45181\",\n          \"EV69055\",\n          \"EV60667\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"VIN (1-10)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 5644,\n        \"samples\": [\n          \"WA1LABGE2N\",\n          \"5YJSA1AC3D\",\n          \"WBY1Z8C52H\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"County\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"Albemarle\",\n          \"Newport\",\n          \"Marin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 544,\n        \"samples\": [\n          \"ELECTRIC CITY\",\n          \"TOPPENISH\",\n          \"PALOUSE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"MT\",\n          \"WI\",\n          \"IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"HONDA\",\n          \"FIAT\",\n          \"DODGE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 107,\n        \"samples\": [\n          \"530E XDRIVE\",\n          \"RANGE ROVER SPORT\",\n          \"BOLT EV\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Vehicle Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Plug-in Hybrid Electric Vehicle (PHEV)\",\n          \"Battery Electric Vehicle (BEV)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Clean Alternative Fuel Vehicle Eligible\",\n          \"Not eligible due to low battery range\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Vehicle Location\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 668,\n        \"samples\": [\n          \"POINT (-121.618012 47.823355)\",\n          \"POINT (-122.02812 47.393554)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Utility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"BONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF CLALLAM COUNTY|PUD NO 1 OF JEFFERSON COUNTY\",\n          \"AVISTA CORP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Expected Price ($1k)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 210,\n        \"samples\": [\n          \"38\",\n          \"102.4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":10}],"source":["df.select_dtypes(include = object)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"61cd2dc2-d2bd-473d-a1be-519928e2e782","outputId":"07da5dc8-5dfb-4085-e135-39c61d953847","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733556564,"user_tz":-60,"elapsed":362,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["ID                                                   64353\n","VIN (1-10)                                            5644\n","County                                                 139\n","City                                                   544\n","State                                                   38\n","ZIP Code                                               678\n","Model Year                                              19\n","Make                                                    34\n","Model                                                  107\n","Electric Vehicle Type                                    2\n","Clean Alternative Fuel Vehicle (CAFV) Eligibility        3\n","Electric Range                                          98\n","Base MSRP                                               37\n","Legislative District                                    50\n","DOL Vehicle ID                                       64353\n","Vehicle Location                                       668\n","Electric Utility                                        68\n","Expected Price ($1k)                                   210\n","dtype: int64"]},"metadata":{},"execution_count":11}],"source":["df.nunique()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e44c6f96-c4ca-40bb-8933-233487478c25","outputId":"6d440bc3-c488-46fa-98d9-ef304d099aed","colab":{"base_uri":"https://localhost:8080/","height":615},"executionInfo":{"status":"ok","timestamp":1721733558462,"user_tz":-60,"elapsed":382,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["          County        City State  Model Year       Make          Model  \\\n","0      Snohomish    LYNNWOOD    WA      2020.0      TESLA        MODEL 3   \n","1         Skagit  BELLINGHAM    WA      2011.0     NISSAN           LEAF   \n","2         Pierce      TACOMA    WA      2015.0        BMW             I3   \n","3           King     REDMOND    WA      2013.0  CHEVROLET           VOLT   \n","4         Pierce    PUYALLUP    WA      2019.0  CHEVROLET        BOLT EV   \n","...          ...         ...   ...         ...        ...            ...   \n","64348       King     SEATTLE    WA      2020.0        KIA           NIRO   \n","64349     Pierce      TACOMA    WA      2013.0     TOYOTA  PRIUS PLUG-IN   \n","64350       King     SEATTLE    WA      2018.0  CHEVROLET        BOLT EV   \n","64351       King     SEATTLE    WA      2017.0    PORSCHE        CAYENNE   \n","64352      Lewis      TOLEDO    WA      2019.0     NISSAN           LEAF   \n","\n","                        Electric Vehicle Type  \\\n","0              Battery Electric Vehicle (BEV)   \n","1              Battery Electric Vehicle (BEV)   \n","2              Battery Electric Vehicle (BEV)   \n","3      Plug-in Hybrid Electric Vehicle (PHEV)   \n","4              Battery Electric Vehicle (BEV)   \n","...                                       ...   \n","64348          Battery Electric Vehicle (BEV)   \n","64349  Plug-in Hybrid Electric Vehicle (PHEV)   \n","64350          Battery Electric Vehicle (BEV)   \n","64351  Plug-in Hybrid Electric Vehicle (PHEV)   \n","64352          Battery Electric Vehicle (BEV)   \n","\n","      Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","0               Clean Alternative Fuel Vehicle Eligible             308   \n","1               Clean Alternative Fuel Vehicle Eligible              73   \n","2               Clean Alternative Fuel Vehicle Eligible              81   \n","3               Clean Alternative Fuel Vehicle Eligible              38   \n","4               Clean Alternative Fuel Vehicle Eligible             238   \n","...                                                 ...             ...   \n","64348           Clean Alternative Fuel Vehicle Eligible             239   \n","64349             Not eligible due to low battery range               6   \n","64350           Clean Alternative Fuel Vehicle Eligible             238   \n","64351             Not eligible due to low battery range              14   \n","64352           Clean Alternative Fuel Vehicle Eligible             150   \n","\n","                                        Electric Utility Expected Price ($1k)  \n","0                                 PUGET SOUND ENERGY INC                   50  \n","1                                 PUGET SOUND ENERGY INC                   15  \n","2      BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                   18  \n","3          PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)                 33.9  \n","4      BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                41.78  \n","...                                                  ...                  ...  \n","64348       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)                   33  \n","64349  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                 13.3  \n","64350       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)               22.857  \n","64351       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)                 45.7  \n","64352  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...                   35  \n","\n","[64353 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-e490b027-9860-4eb2-9c2a-2e51e020ab43\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Model Year</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Electric Range</th>\n","      <th>Electric Utility</th>\n","      <th>Expected Price ($1k)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Snohomish</td>\n","      <td>LYNNWOOD</td>\n","      <td>WA</td>\n","      <td>2020.0</td>\n","      <td>TESLA</td>\n","      <td>MODEL 3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>308</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Skagit</td>\n","      <td>BELLINGHAM</td>\n","      <td>WA</td>\n","      <td>2011.0</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>73</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Pierce</td>\n","      <td>TACOMA</td>\n","      <td>WA</td>\n","      <td>2015.0</td>\n","      <td>BMW</td>\n","      <td>I3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>81</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>King</td>\n","      <td>REDMOND</td>\n","      <td>WA</td>\n","      <td>2013.0</td>\n","      <td>CHEVROLET</td>\n","      <td>VOLT</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>38</td>\n","      <td>PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)</td>\n","      <td>33.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pierce</td>\n","      <td>PUYALLUP</td>\n","      <td>WA</td>\n","      <td>2019.0</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>238</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>41.78</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>64348</th>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>2020.0</td>\n","      <td>KIA</td>\n","      <td>NIRO</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>239</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>64349</th>\n","      <td>Pierce</td>\n","      <td>TACOMA</td>\n","      <td>WA</td>\n","      <td>2013.0</td>\n","      <td>TOYOTA</td>\n","      <td>PRIUS PLUG-IN</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Not eligible due to low battery range</td>\n","      <td>6</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>13.3</td>\n","    </tr>\n","    <tr>\n","      <th>64350</th>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>2018.0</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>238</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>22.857</td>\n","    </tr>\n","    <tr>\n","      <th>64351</th>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>2017.0</td>\n","      <td>PORSCHE</td>\n","      <td>CAYENNE</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Not eligible due to low battery range</td>\n","      <td>14</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>45.7</td>\n","    </tr>\n","    <tr>\n","      <th>64352</th>\n","      <td>Lewis</td>\n","      <td>TOLEDO</td>\n","      <td>WA</td>\n","      <td>2019.0</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>150</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>35</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>64353 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e490b027-9860-4eb2-9c2a-2e51e020ab43')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e490b027-9860-4eb2-9c2a-2e51e020ab43 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e490b027-9860-4eb2-9c2a-2e51e020ab43');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-cf4eb6d8-0e2e-45d5-8962-048b1ea3e4f0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-cf4eb6d8-0e2e-45d5-8962-048b1ea3e4f0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-cf4eb6d8-0e2e-45d5-8962-048b1ea3e4f0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_6562e79c-72fb-4d71-aad0-3736b79d37ea\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_6562e79c-72fb-4d71-aad0-3736b79d37ea button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 64353,\n  \"fields\": [\n    {\n      \"column\": \"County\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"Albemarle\",\n          \"Newport\",\n          \"Marin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 544,\n        \"samples\": [\n          \"ELECTRIC CITY\",\n          \"TOPPENISH\",\n          \"PALOUSE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"MT\",\n          \"WI\",\n          \"IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7267416763887606,\n        \"min\": 1993.0,\n        \"max\": 2022.0,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2020.0,\n          2016.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"HONDA\",\n          \"FIAT\",\n          \"DODGE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 107,\n        \"samples\": [\n          \"530E XDRIVE\",\n          \"RANGE ROVER SPORT\",\n          \"BOLT EV\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Vehicle Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Plug-in Hybrid Electric Vehicle (PHEV)\",\n          \"Battery Electric Vehicle (BEV)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Clean Alternative Fuel Vehicle Eligible\",\n          \"Not eligible due to low battery range\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104,\n        \"min\": 0,\n        \"max\": 337,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          20,\n          200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Utility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"BONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF CLALLAM COUNTY|PUD NO 1 OF JEFFERSON COUNTY\",\n          \"AVISTA CORP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Expected Price ($1k)\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 210,\n        \"samples\": [\n          \"38\",\n          \"102.4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":12}],"source":["df = df.drop(columns = ['ID' ,'VIN (1-10)', 'ZIP Code', 'Base MSRP', 'DOL Vehicle ID', 'ZIP Code','Legislative District','Vehicle Location'])\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"e47ea0c9-2c02-42c9-ac44-8c2ed3e9a95a","outputId":"672d69ae-99c8-44e0-b8e5-2eb1769a0572","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733561035,"user_tz":-60,"elapsed":478,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["(64353, 11)"]},"metadata":{},"execution_count":13}],"source":["df.shape"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3b836d39-f36e-423d-9fae-8c05241d580b","outputId":"76b00c88-0558-47a7-c08e-5985f41c8858","colab":{"base_uri":"https://localhost:8080/","height":615},"executionInfo":{"status":"ok","timestamp":1721733562000,"user_tz":-60,"elapsed":366,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["          County        City State  Model Year       Make          Model  \\\n","0      Snohomish    LYNNWOOD    WA      2020.0      TESLA        MODEL 3   \n","1         Skagit  BELLINGHAM    WA      2011.0     NISSAN           LEAF   \n","2         Pierce      TACOMA    WA      2015.0        BMW             I3   \n","3           King     REDMOND    WA      2013.0  CHEVROLET           VOLT   \n","4         Pierce    PUYALLUP    WA      2019.0  CHEVROLET        BOLT EV   \n","...          ...         ...   ...         ...        ...            ...   \n","64348       King     SEATTLE    WA      2020.0        KIA           NIRO   \n","64349     Pierce      TACOMA    WA      2013.0     TOYOTA  PRIUS PLUG-IN   \n","64350       King     SEATTLE    WA      2018.0  CHEVROLET        BOLT EV   \n","64351       King     SEATTLE    WA      2017.0    PORSCHE        CAYENNE   \n","64352      Lewis      TOLEDO    WA      2019.0     NISSAN           LEAF   \n","\n","                        Electric Vehicle Type  \\\n","0              Battery Electric Vehicle (BEV)   \n","1              Battery Electric Vehicle (BEV)   \n","2              Battery Electric Vehicle (BEV)   \n","3      Plug-in Hybrid Electric Vehicle (PHEV)   \n","4              Battery Electric Vehicle (BEV)   \n","...                                       ...   \n","64348          Battery Electric Vehicle (BEV)   \n","64349  Plug-in Hybrid Electric Vehicle (PHEV)   \n","64350          Battery Electric Vehicle (BEV)   \n","64351  Plug-in Hybrid Electric Vehicle (PHEV)   \n","64352          Battery Electric Vehicle (BEV)   \n","\n","      Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","0               Clean Alternative Fuel Vehicle Eligible             308   \n","1               Clean Alternative Fuel Vehicle Eligible              73   \n","2               Clean Alternative Fuel Vehicle Eligible              81   \n","3               Clean Alternative Fuel Vehicle Eligible              38   \n","4               Clean Alternative Fuel Vehicle Eligible             238   \n","...                                                 ...             ...   \n","64348           Clean Alternative Fuel Vehicle Eligible             239   \n","64349             Not eligible due to low battery range               6   \n","64350           Clean Alternative Fuel Vehicle Eligible             238   \n","64351             Not eligible due to low battery range              14   \n","64352           Clean Alternative Fuel Vehicle Eligible             150   \n","\n","                                        Electric Utility Expected Price  \n","0                                 PUGET SOUND ENERGY INC             50  \n","1                                 PUGET SOUND ENERGY INC             15  \n","2      BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...             18  \n","3          PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)           33.9  \n","4      BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...          41.78  \n","...                                                  ...            ...  \n","64348       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)             33  \n","64349  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...           13.3  \n","64350       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)         22.857  \n","64351       CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)           45.7  \n","64352  BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...             35  \n","\n","[64353 rows x 11 columns]"],"text/html":["\n","  <div id=\"df-d633d008-a5c9-49d9-8366-1599fcb89c57\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Model Year</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Electric Range</th>\n","      <th>Electric Utility</th>\n","      <th>Expected Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Snohomish</td>\n","      <td>LYNNWOOD</td>\n","      <td>WA</td>\n","      <td>2020.0</td>\n","      <td>TESLA</td>\n","      <td>MODEL 3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>308</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>50</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Skagit</td>\n","      <td>BELLINGHAM</td>\n","      <td>WA</td>\n","      <td>2011.0</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>73</td>\n","      <td>PUGET SOUND ENERGY INC</td>\n","      <td>15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Pierce</td>\n","      <td>TACOMA</td>\n","      <td>WA</td>\n","      <td>2015.0</td>\n","      <td>BMW</td>\n","      <td>I3</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>81</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>King</td>\n","      <td>REDMOND</td>\n","      <td>WA</td>\n","      <td>2013.0</td>\n","      <td>CHEVROLET</td>\n","      <td>VOLT</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>38</td>\n","      <td>PUGET SOUND ENERGY INC||CITY OF TACOMA - (WA)</td>\n","      <td>33.9</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Pierce</td>\n","      <td>PUYALLUP</td>\n","      <td>WA</td>\n","      <td>2019.0</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>238</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>41.78</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>64348</th>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>2020.0</td>\n","      <td>KIA</td>\n","      <td>NIRO</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>239</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>64349</th>\n","      <td>Pierce</td>\n","      <td>TACOMA</td>\n","      <td>WA</td>\n","      <td>2013.0</td>\n","      <td>TOYOTA</td>\n","      <td>PRIUS PLUG-IN</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Not eligible due to low battery range</td>\n","      <td>6</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>13.3</td>\n","    </tr>\n","    <tr>\n","      <th>64350</th>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>2018.0</td>\n","      <td>CHEVROLET</td>\n","      <td>BOLT EV</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>238</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>22.857</td>\n","    </tr>\n","    <tr>\n","      <th>64351</th>\n","      <td>King</td>\n","      <td>SEATTLE</td>\n","      <td>WA</td>\n","      <td>2017.0</td>\n","      <td>PORSCHE</td>\n","      <td>CAYENNE</td>\n","      <td>Plug-in Hybrid Electric Vehicle (PHEV)</td>\n","      <td>Not eligible due to low battery range</td>\n","      <td>14</td>\n","      <td>CITY OF SEATTLE - (WA)|CITY OF TACOMA - (WA)</td>\n","      <td>45.7</td>\n","    </tr>\n","    <tr>\n","      <th>64352</th>\n","      <td>Lewis</td>\n","      <td>TOLEDO</td>\n","      <td>WA</td>\n","      <td>2019.0</td>\n","      <td>NISSAN</td>\n","      <td>LEAF</td>\n","      <td>Battery Electric Vehicle (BEV)</td>\n","      <td>Clean Alternative Fuel Vehicle Eligible</td>\n","      <td>150</td>\n","      <td>BONNEVILLE POWER ADMINISTRATION||CITY OF TACOM...</td>\n","      <td>35</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>64353 rows × 11 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d633d008-a5c9-49d9-8366-1599fcb89c57')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d633d008-a5c9-49d9-8366-1599fcb89c57 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d633d008-a5c9-49d9-8366-1599fcb89c57');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7a8123d7-eaab-4d31-b6fa-9ad7f97200c4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7a8123d7-eaab-4d31-b6fa-9ad7f97200c4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7a8123d7-eaab-4d31-b6fa-9ad7f97200c4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_58ce66c3-db71-4a55-938e-c220c2fc3a58\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_58ce66c3-db71-4a55-938e-c220c2fc3a58 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"df","summary":"{\n  \"name\": \"df\",\n  \"rows\": 64353,\n  \"fields\": [\n    {\n      \"column\": \"County\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 139,\n        \"samples\": [\n          \"Albemarle\",\n          \"Newport\",\n          \"Marin\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 544,\n        \"samples\": [\n          \"ELECTRIC CITY\",\n          \"TOPPENISH\",\n          \"PALOUSE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 38,\n        \"samples\": [\n          \"MT\",\n          \"WI\",\n          \"IL\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2.7267416763887606,\n        \"min\": 1993.0,\n        \"max\": 2022.0,\n        \"num_unique_values\": 19,\n        \"samples\": [\n          2020.0,\n          2016.0,\n          2012.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 34,\n        \"samples\": [\n          \"HONDA\",\n          \"FIAT\",\n          \"DODGE\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 107,\n        \"samples\": [\n          \"530E XDRIVE\",\n          \"RANGE ROVER SPORT\",\n          \"BOLT EV\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Vehicle Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"Plug-in Hybrid Electric Vehicle (PHEV)\",\n          \"Battery Electric Vehicle (BEV)\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Clean Alternative Fuel Vehicle Eligible\",\n          \"Not eligible due to low battery range\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 104,\n        \"min\": 0,\n        \"max\": 337,\n        \"num_unique_values\": 98,\n        \"samples\": [\n          20,\n          200\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Utility\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 68,\n        \"samples\": [\n          \"BONNEVILLE POWER ADMINISTRATION||PUD NO 1 OF CLALLAM COUNTY|PUD NO 1 OF JEFFERSON COUNTY\",\n          \"AVISTA CORP\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Expected Price\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 210,\n        \"samples\": [\n          \"38\",\n          \"102.4\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":14}],"source":["df = df.rename(columns = {'Expected Price ($1k)':'Expected Price'})\n","df"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"633e561b-8745-4450-b76a-b7fb4ce589a5"},"outputs":[],"source":["df[\"Expected Price\"] = pd.to_numeric(df[\"Expected Price\"],errors = 'coerce')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a949d08c-c9b8-4821-be7b-a63105f4e4d3","outputId":"6fce9cd7-b595-4cb0-cb6f-4596a1766603","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733566137,"user_tz":-60,"elapsed":4,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["dtype('float64')"]},"metadata":{},"execution_count":16}],"source":["df[\"Expected Price\"].dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"30368533-4225-4990-818b-d5069591d1a3","outputId":"519fd919-8c20-4e1c-f5aa-2dfb472c9303","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733595556,"user_tz":-60,"elapsed":9508,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: ydata_profiling in /usr/local/lib/python3.10/dist-packages (4.9.0)\n","Requirement already satisfied: scipy<1.14,>=1.4.1 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (1.11.4)\n","Requirement already satisfied: pandas!=1.4.0,<3,>1.1 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (2.0.3)\n","Requirement already satisfied: matplotlib<3.10,>=3.5 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (3.7.1)\n","Requirement already satisfied: pydantic>=2 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (2.8.2)\n","Requirement already satisfied: PyYAML<6.1,>=5.0.0 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (6.0.1)\n","Requirement already satisfied: jinja2<3.2,>=2.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (3.1.4)\n","Requirement already satisfied: visions[type_image_path]<0.7.7,>=0.7.5 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (0.7.6)\n","Requirement already satisfied: numpy<2,>=1.16.0 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (1.25.2)\n","Requirement already satisfied: htmlmin==0.1.12 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (0.1.12)\n","Requirement already satisfied: phik<0.13,>=0.11.1 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (0.12.4)\n","Requirement already satisfied: requests<3,>=2.24.0 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (2.31.0)\n","Requirement already satisfied: tqdm<5,>=4.48.2 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (4.66.4)\n","Requirement already satisfied: seaborn<0.14,>=0.10.1 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (0.13.1)\n","Requirement already satisfied: multimethod<2,>=1.4 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (1.12)\n","Requirement already satisfied: statsmodels<1,>=0.13.2 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (0.14.2)\n","Requirement already satisfied: typeguard<5,>=3 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (4.3.0)\n","Requirement already satisfied: imagehash==4.3.1 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (4.3.1)\n","Requirement already satisfied: wordcloud>=1.9.1 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (1.9.3)\n","Requirement already satisfied: dacite>=1.8 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (1.8.1)\n","Requirement already satisfied: numba<1,>=0.56.0 in /usr/local/lib/python3.10/dist-packages (from ydata_profiling) (0.58.1)\n","Requirement already satisfied: PyWavelets in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata_profiling) (1.6.0)\n","Requirement already satisfied: pillow in /usr/local/lib/python3.10/dist-packages (from imagehash==4.3.1->ydata_profiling) (9.4.0)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.10/dist-packages (from jinja2<3.2,>=2.11.1->ydata_profiling) (2.1.5)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata_profiling) (1.2.1)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata_profiling) (0.12.1)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata_profiling) (4.53.1)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata_profiling) (1.4.5)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata_profiling) (24.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata_profiling) (3.1.2)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.10/dist-packages (from matplotlib<3.10,>=3.5->ydata_profiling) (2.8.2)\n","Requirement already satisfied: llvmlite<0.42,>=0.41.0dev0 in /usr/local/lib/python3.10/dist-packages (from numba<1,>=0.56.0->ydata_profiling) (0.41.1)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<3,>1.1->ydata_profiling) (2023.4)\n","Requirement already satisfied: tzdata>=2022.1 in /usr/local/lib/python3.10/dist-packages (from pandas!=1.4.0,<3,>1.1->ydata_profiling) (2024.1)\n","Requirement already satisfied: joblib>=0.14.1 in /usr/local/lib/python3.10/dist-packages (from phik<0.13,>=0.11.1->ydata_profiling) (1.4.2)\n","Requirement already satisfied: annotated-types>=0.4.0 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata_profiling) (0.7.0)\n","Requirement already satisfied: pydantic-core==2.20.1 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata_profiling) (2.20.1)\n","Requirement already satisfied: typing-extensions>=4.6.1 in /usr/local/lib/python3.10/dist-packages (from pydantic>=2->ydata_profiling) (4.12.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata_profiling) (3.3.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata_profiling) (3.7)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata_profiling) (2.0.7)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.10/dist-packages (from requests<3,>=2.24.0->ydata_profiling) (2024.7.4)\n","Requirement already satisfied: patsy>=0.5.6 in /usr/local/lib/python3.10/dist-packages (from statsmodels<1,>=0.13.2->ydata_profiling) (0.5.6)\n","Requirement already satisfied: attrs>=19.3.0 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]<0.7.7,>=0.7.5->ydata_profiling) (23.2.0)\n","Requirement already satisfied: networkx>=2.4 in /usr/local/lib/python3.10/dist-packages (from visions[type_image_path]<0.7.7,>=0.7.5->ydata_profiling) (3.3)\n","Requirement already satisfied: six in /usr/local/lib/python3.10/dist-packages (from patsy>=0.5.6->statsmodels<1,>=0.13.2->ydata_profiling) (1.16.0)\n"]}],"source":["!pip install ydata_profiling"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"referenced_widgets":["20f476caa1114a9fb80addf4e7490044","4b1fb6ccd2ec47bab1f92fb1dff8d376","1c52da3c108f484a812ac540b1267a35","54d88a94810c4b10a709c9c39570ea21","e1dfceb45d8f44f69f4d0567cb698958","03dd1b989e5f4f5b8bcf6cf854485129","07b93a80b9b34a1687d39f425267eff1","0635c38715744543bef4e1884fc5f233","81acfe8f6b2b4711a1a75e3b04a1db2e","852b87e28b53446197ee1e3c4ade220e","b80d8c594e96443d8f0045d0a186eed5","2c5fcfe932634bd4bf101877203ef73b","3592de5e67244aedb5c839478d040cb3","4779893a220940f6a157541a6c52c9c9","8c927748153c4f6a93b960e3f29472a6","5527db85f2614c3cb7173f32a4f89ff8","82e78a51503646928fbcf590a4687e23","e7eeb34afbad4d96b3bfc301ee2b522e","cb541e87038349c2831c71690d5073c1","f4fe6b3bfeac42f99c76875c64c14d57","ae91bbcfc7a1463285f3487f8f561aff","a42b7144ffe44de4b12aea85c2a2b26a","2c4a151f2e6f4218b8f91ef09af31450","0cfefa353c684655a0f2f198be1bd091","72fdd2cefdaf4571b79bcdefcd4b8c1e","783c6eb64293459c976d4f77f1d993b4","51c46aa8a9a041ba8757ce73ff0b133b","5f7fcd5c5b3549dca1f535ee948b4ccc","62a278ec4a2c4a498c050f0f54364034","ac483e56fba14152950d762de261a637","564f10150c2d46399f7a08ee05237c93","d9dd5fc895ce4f58b8c604b58daea8d1","dbc59c9728cb4111af3c406fc3b47524"],"base_uri":"https://localhost:8080/","height":917,"output_embedded_package_id":"1fhRA-AKri4a_Q57i_xw8YzqKCSlOt0n4"},"id":"bb3c4f45-0f25-4ff9-8081-14e5d116b7aa","outputId":"477622a4-40d4-4d4a-9c9f-37a29d92ad61","executionInfo":{"status":"ok","timestamp":1721733648877,"user_tz":-60,"elapsed":27401,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}],"source":["profiling = ProfileReport(df, title =\"data profiling for electric cars\")\n","profiling"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"458f2379-944f-4acb-8565-45cd074e837b","outputId":"0c811f21-ae7a-46ec-9869-e503c149e6d2","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733656467,"user_tz":-60,"elapsed":374,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["County                                                 4\n","City                                                   9\n","State                                                 11\n","Model Year                                             7\n","Make                                                   4\n","Model                                                 13\n","Electric Vehicle Type                                  0\n","Clean Alternative Fuel Vehicle (CAFV) Eligibility      0\n","Electric Range                                         0\n","Electric Utility                                     722\n","Expected Price                                        13\n","dtype: int64"]},"metadata":{},"execution_count":20}],"source":["df.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"154a7807-696a-4417-8118-a9d764cf2680"},"outputs":[],"source":["Numeric = df.select_dtypes(include = np.number).columns\n","df[Numeric] = df[Numeric].fillna(df[Numeric].mean())\n","#method 2\n","#Numeric = df.select_dtypes(include = np.number)\n","#df[Numeric.columns] = df[Numeric.columns].fillna(df[Numeric.columns].mean())\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"dc90b5fe-cc48-46a3-a306-b0b9ee3928fd"},"outputs":[],"source":["for col in df.select_dtypes( include = object):\n","    df[col] = df[col].fillna(df[col].mode()[0])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c15f1549-5c54-4371-917a-18974acbb762","outputId":"14f076c5-a544-4c9e-ad0d-1d92581417e5","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733661327,"user_tz":-60,"elapsed":5,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["County                                               0\n","City                                                 0\n","State                                                0\n","Model Year                                           0\n","Make                                                 0\n","Model                                                0\n","Electric Vehicle Type                                0\n","Clean Alternative Fuel Vehicle (CAFV) Eligibility    0\n","Electric Range                                       0\n","Electric Utility                                     0\n","Expected Price                                       0\n","dtype: int64"]},"metadata":{},"execution_count":23}],"source":["df.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"b4996c0b-cff6-4f60-a9b5-00ffed53f8cd","outputId":"2f8af3f1-012b-4aa3-9f89-c8eba4ae4383","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733664558,"user_tz":-60,"elapsed":498,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["0"]},"metadata":{},"execution_count":24}],"source":["df.duplicated().sum()\n","df = df.drop_duplicates()\n","df.duplicated().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"9d378469-c628-40f7-8646-afdb5a9472e5"},"outputs":[],"source":["Numbers = df.select_dtypes(include = np.number)\n","zscoress = zscore(Numbers)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"03e8aa56-5160-4699-a405-3f5889589876","outputId":"7fbf793f-ceec-4391-bb8b-714e878c0158","colab":{"base_uri":"https://localhost:8080/","height":112},"executionInfo":{"status":"ok","timestamp":1721733667627,"user_tz":-60,"elapsed":364,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["      Model Year  Electric Range  Expected Price\n","1894    1.459579       -0.503153           0.624\n","3098    1.459579       -0.503153           0.624"],"text/html":["\n","  <div id=\"df-9b2292c7-bad7-4b35-8fa6-320d3eb40951\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Model Year</th>\n","      <th>Electric Range</th>\n","      <th>Expected Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1894</th>\n","      <td>1.459579</td>\n","      <td>-0.503153</td>\n","      <td>0.624</td>\n","    </tr>\n","    <tr>\n","      <th>3098</th>\n","      <td>1.459579</td>\n","      <td>-0.503153</td>\n","      <td>0.624</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9b2292c7-bad7-4b35-8fa6-320d3eb40951')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9b2292c7-bad7-4b35-8fa6-320d3eb40951 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9b2292c7-bad7-4b35-8fa6-320d3eb40951');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0a2a7a66-895c-4bd9-8e73-707a8a2cd946\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0a2a7a66-895c-4bd9-8e73-707a8a2cd946')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0a2a7a66-895c-4bd9-8e73-707a8a2cd946 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"zscoress\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 1.459579289074644,\n        \"max\": 1.459579289074644,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1.459579289074644\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": -0.5031526675463338,\n        \"max\": -0.5031526675463338,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          -0.5031526675463338\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Expected Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0,\n        \"min\": 0.6240000331885169,\n        \"max\": 0.6240000331885169,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          0.6240000331885169\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":26}],"source":["zscoress.nlargest(2,Numbers)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"0b336bf4-ee16-4248-80e3-7e6c4e719f78"},"outputs":[],"source":["Numbers =Numbers[np.abs(zscoress) < 2.5]\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"38c5229c-602c-4fb4-a6d3-26dec1d09ed9"},"outputs":[],"source":["Numbers.fillna(Numbers.mean(), inplace = True)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"bd7b5614-67c8-457c-a53f-922aa47fb8f2"},"outputs":[],"source":["df.loc[:, ['Model Year','Electric Range','Expected Price']] = Numbers"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"10c67a93-673b-4fec-b2b7-2aa6a01fb9f3","outputId":"a9f55e30-ee0c-42aa-ad39-cabaa8e4a9ff","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733681425,"user_tz":-60,"elapsed":402,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["County                                               0\n","City                                                 0\n","State                                                0\n","Model Year                                           0\n","Make                                                 0\n","Model                                                0\n","Electric Vehicle Type                                0\n","Clean Alternative Fuel Vehicle (CAFV) Eligibility    0\n","Electric Range                                       0\n","Electric Utility                                     0\n","Expected Price                                       0\n","dtype: int64"]},"metadata":{},"execution_count":30}],"source":["df.isna().sum()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"2f7bb16c-96c4-4372-abf8-5615aacf106f","outputId":"6fd7385d-9bd3-499d-9d55-85e10b7d705a","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733683080,"user_tz":-60,"elapsed":3,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["County                                                object\n","City                                                  object\n","State                                                 object\n","Model Year                                           float64\n","Make                                                  object\n","Model                                                 object\n","Electric Vehicle Type                                 object\n","Clean Alternative Fuel Vehicle (CAFV) Eligibility     object\n","Electric Range                                       float64\n","Electric Utility                                      object\n","Expected Price                                       float64\n","dtype: object"]},"metadata":{},"execution_count":31}],"source":["df.dtypes"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"c92f9c76-903e-4fec-b7a5-f47ceba69b31","outputId":"1ff17b60-da0b-44d0-9fa8-fddf05172175","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733686091,"user_tz":-60,"elapsed":361,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-32-5c3f6fa7a8f0>:3: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['City'] = labelencoder.fit_transform(df['City'])\n","<ipython-input-32-5c3f6fa7a8f0>:4: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['County'] = labelencoder.fit_transform(df['County'])\n","<ipython-input-32-5c3f6fa7a8f0>:5: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['State'] = labelencoder.fit_transform(df['State'])\n","<ipython-input-32-5c3f6fa7a8f0>:6: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['Make'] = labelencoder.fit_transform(df['Make'])\n","<ipython-input-32-5c3f6fa7a8f0>:7: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['Model'] = labelencoder.fit_transform(df['Model'])\n","<ipython-input-32-5c3f6fa7a8f0>:8: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['Electric Vehicle Type'] = labelencoder.fit_transform(df['Electric Vehicle Type'])\n","<ipython-input-32-5c3f6fa7a8f0>:9: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['Clean Alternative Fuel Vehicle (CAFV) Eligibility'] = labelencoder.fit_transform(df['Clean Alternative Fuel Vehicle (CAFV) Eligibility'])\n","<ipython-input-32-5c3f6fa7a8f0>:10: SettingWithCopyWarning: \n","A value is trying to be set on a copy of a slice from a DataFrame.\n","Try using .loc[row_indexer,col_indexer] = value instead\n","\n","See the caveats in the documentation: https://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n","  df['Electric Utility'] = labelencoder.fit_transform(df['Electric Utility'])\n"]}],"source":["labelencoder = LabelEncoder()\n","\n","df['City'] = labelencoder.fit_transform(df['City'])\n","df['County'] = labelencoder.fit_transform(df['County'])\n","df['State'] = labelencoder.fit_transform(df['State'])\n","df['Make'] = labelencoder.fit_transform(df['Make'])\n","df['Model'] = labelencoder.fit_transform(df['Model'])\n","df['Electric Vehicle Type'] = labelencoder.fit_transform(df['Electric Vehicle Type'])\n","df['Clean Alternative Fuel Vehicle (CAFV) Eligibility'] = labelencoder.fit_transform(df['Clean Alternative Fuel Vehicle (CAFV) Eligibility'])\n","df['Electric Utility'] = labelencoder.fit_transform(df['Electric Utility'])"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a755fa88-c70f-456b-96f1-dc4a5132a3ee"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"fc47d2e7-408f-419b-b4c5-e0367917b44f"},"outputs":[],"source":["x = df.drop('Expected Price', axis=1)\n","y = df['Expected Price']"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"78a5e799-a996-4115-acf7-35f5de210cb4"},"outputs":[],"source":["x_train,x_test,y_train,y_test = train_test_split(x,y,test_size= 0.25, random_state = 42)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"71e6006f-ea48-4ae6-8d55-0bcac3459bed"},"outputs":[],"source":["sc_x = StandardScaler()\n","x_train = sc_x.fit_transform(x_train)\n","x_test = sc_x.transform(x_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"a37a18cd-b87a-464f-92b5-5a5df719e640"},"outputs":[],"source":["svm = SVR(kernel = 'linear')\n","svm.fit(x_train, y_train)\n","y_pred = svm.predict(x_test)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"7d7f0b4e-f2ab-4cba-9bab-2259ff63c75b","outputId":"ffafe573-9754-4b07-fb84-626bc4a0dba8","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1721733714632,"user_tz":-60,"elapsed":403,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["       real_values  Predicted_lables\n","8438      37.68543         42.466673\n","36865     54.00000         42.177030\n","17255     65.00000         38.199234\n","42097     18.00000         18.099918\n","9202      82.70000         47.808616"],"text/html":["\n","  <div id=\"df-21ae0170-9024-4ed4-89dc-106b24d351d3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>real_values</th>\n","      <th>Predicted_lables</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8438</th>\n","      <td>37.68543</td>\n","      <td>42.466673</td>\n","    </tr>\n","    <tr>\n","      <th>36865</th>\n","      <td>54.00000</td>\n","      <td>42.177030</td>\n","    </tr>\n","    <tr>\n","      <th>17255</th>\n","      <td>65.00000</td>\n","      <td>38.199234</td>\n","    </tr>\n","    <tr>\n","      <th>42097</th>\n","      <td>18.00000</td>\n","      <td>18.099918</td>\n","    </tr>\n","    <tr>\n","      <th>9202</th>\n","      <td>82.70000</td>\n","      <td>47.808616</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-21ae0170-9024-4ed4-89dc-106b24d351d3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-21ae0170-9024-4ed4-89dc-106b24d351d3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-21ae0170-9024-4ed4-89dc-106b24d351d3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-18cf014e-b054-47ca-b387-2504c27f34c3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-18cf014e-b054-47ca-b387-2504c27f34c3')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-18cf014e-b054-47ca-b387-2504c27f34c3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"data","summary":"{\n  \"name\": \"data\",\n  \"rows\": 4157,\n  \"fields\": [\n    {\n      \"column\": \"real_values\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21.677313781788733,\n        \"min\": 2.8,\n        \"max\": 105.0,\n        \"num_unique_values\": 190,\n        \"samples\": [\n          89.75,\n          29.72,\n          65.9\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Predicted_lables\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 12.0215760846317,\n        \"min\": 6.056568173898061,\n        \"max\": 60.387104259905044,\n        \"num_unique_values\": 4157,\n        \"samples\": [\n          42.13518440741036,\n          40.83973645091327,\n          31.63681752896987\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":37}],"source":["data = pd.DataFrame({\"real_values\": y_test,\"Predicted_lables\": y_pred})\n","data.head()"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4e5101a4-0c8a-4385-aa27-f2ad41f4c491","outputId":"b3e2c5b7-b826-4ed9-a394-d8df87905dbf","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1721733716951,"user_tz":-60,"elapsed":478,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"stream","name":"stdout","text":["Mean Absolute Error (MAE): 11.948405301361367\n","Mean Squared Error (MSE): 272.72906676886123\n","R-squared (R²) Score: 0.41946957741602675\n"]}],"source":["mae = mean_absolute_error(y_test, y_pred)\n","mse = mean_squared_error(y_test, y_pred)\n","r2 = r2_score(y_test, y_pred)\n","\n","print(\"Mean Absolute Error (MAE):\", mae)\n","print(\"Mean Squared Error (MSE):\", mse)\n","print(\"R-squared (R²) Score:\", r2)\n","#note mean_square_error use be lower than the square means of the target column"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"044a3973-b814-44dd-b674-a8cdedfa1ad6","outputId":"4a6c27d4-7045-461b-c3a2-22f39bba77a8","colab":{"base_uri":"https://localhost:8080/","height":318},"executionInfo":{"status":"ok","timestamp":1721733719933,"user_tz":-60,"elapsed":379,"user":{"displayName":"Madago Prosper","userId":"13373700234025942899"}}},"outputs":[{"output_type":"execute_result","data":{"text/plain":["             County          City         State    Model Year          Make  \\\n","count  16628.000000  16628.000000  16628.000000  16628.000000  16628.000000   \n","mean      78.735266    278.532776     34.813207   2017.845046     17.206218   \n","std       34.803460    159.214125      2.156696      2.810676     10.216428   \n","min        0.000000      0.000000      0.000000   2011.000000      0.000000   \n","25%       60.000000    145.000000     35.000000   2016.000000      6.000000   \n","50%       62.000000    280.000000     35.000000   2018.000000     19.000000   \n","75%      120.000000    433.000000     35.000000   2020.000000     28.000000   \n","max      138.000000    543.000000     37.000000   2022.000000     33.000000   \n","\n","              Model  Electric Vehicle Type  \\\n","count  16628.000000           16628.000000   \n","mean      55.223839               0.413339   \n","std       24.861250               0.492447   \n","min        0.000000               0.000000   \n","25%       40.000000               0.000000   \n","50%       57.000000               0.000000   \n","75%       67.000000               1.000000   \n","max      106.000000               1.000000   \n","\n","       Clean Alternative Fuel Vehicle (CAFV) Eligibility  Electric Range  \\\n","count                                       16628.000000    16628.000000   \n","mean                                            0.682884       90.201409   \n","std                                             0.861171       96.064364   \n","min                                             0.000000        0.000000   \n","25%                                             0.000000       18.000000   \n","50%                                             0.000000       40.000000   \n","75%                                             2.000000      200.000000   \n","max                                             2.000000      330.000000   \n","\n","       Electric Utility  Expected Price  \n","count      16628.000000    16628.000000  \n","mean          51.242904       37.685430  \n","std           19.865458       21.661063  \n","min            0.000000        0.000000  \n","25%           32.000000       20.000000  \n","50%           65.000000       31.670000  \n","75%           66.000000       50.000000  \n","max           67.000000      106.000000  "],"text/html":["\n","  <div id=\"df-aa09ea95-c2d9-47a3-829f-e8aaf03009e8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>County</th>\n","      <th>City</th>\n","      <th>State</th>\n","      <th>Model Year</th>\n","      <th>Make</th>\n","      <th>Model</th>\n","      <th>Electric Vehicle Type</th>\n","      <th>Clean Alternative Fuel Vehicle (CAFV) Eligibility</th>\n","      <th>Electric Range</th>\n","      <th>Electric Utility</th>\n","      <th>Expected Price</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","      <td>16628.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>78.735266</td>\n","      <td>278.532776</td>\n","      <td>34.813207</td>\n","      <td>2017.845046</td>\n","      <td>17.206218</td>\n","      <td>55.223839</td>\n","      <td>0.413339</td>\n","      <td>0.682884</td>\n","      <td>90.201409</td>\n","      <td>51.242904</td>\n","      <td>37.685430</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>34.803460</td>\n","      <td>159.214125</td>\n","      <td>2.156696</td>\n","      <td>2.810676</td>\n","      <td>10.216428</td>\n","      <td>24.861250</td>\n","      <td>0.492447</td>\n","      <td>0.861171</td>\n","      <td>96.064364</td>\n","      <td>19.865458</td>\n","      <td>21.661063</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2011.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>60.000000</td>\n","      <td>145.000000</td>\n","      <td>35.000000</td>\n","      <td>2016.000000</td>\n","      <td>6.000000</td>\n","      <td>40.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>18.000000</td>\n","      <td>32.000000</td>\n","      <td>20.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>62.000000</td>\n","      <td>280.000000</td>\n","      <td>35.000000</td>\n","      <td>2018.000000</td>\n","      <td>19.000000</td>\n","      <td>57.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>40.000000</td>\n","      <td>65.000000</td>\n","      <td>31.670000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>120.000000</td>\n","      <td>433.000000</td>\n","      <td>35.000000</td>\n","      <td>2020.000000</td>\n","      <td>28.000000</td>\n","      <td>67.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>200.000000</td>\n","      <td>66.000000</td>\n","      <td>50.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>138.000000</td>\n","      <td>543.000000</td>\n","      <td>37.000000</td>\n","      <td>2022.000000</td>\n","      <td>33.000000</td>\n","      <td>106.000000</td>\n","      <td>1.000000</td>\n","      <td>2.000000</td>\n","      <td>330.000000</td>\n","      <td>67.000000</td>\n","      <td>106.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aa09ea95-c2d9-47a3-829f-e8aaf03009e8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aa09ea95-c2d9-47a3-829f-e8aaf03009e8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aa09ea95-c2d9-47a3-829f-e8aaf03009e8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-951cb29c-211a-4832-994e-067e781c904e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-951cb29c-211a-4832-994e-067e781c904e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-951cb29c-211a-4832-994e-067e781c904e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"County\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5854.123046187384,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          78.73526581669474,\n          62.0,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"City\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5788.504420767322,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          278.53277604041375,\n          280.0,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"State\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5869.866936256149,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 6,\n        \"samples\": [\n          16628.0,\n          34.81320663940342,\n          37.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model Year\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5314.326147443338,\n        \"min\": 2.8106756103153274,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          2017.845046285869,\n          2018.0,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Make\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5873.167196180639,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          17.20621842675006,\n          19.0,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Model\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5861.285866889695,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          55.223839307192684,\n          57.0,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Vehicle Type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5878.739029078127,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.41333894635554486,\n          1.0,\n          0.492447404179474\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Clean Alternative Fuel Vehicle (CAFV) Eligibility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5878.60582022224,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.6828842915564108,\n          2.0,\n          0.8611712827252841\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Range\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5840.789035481974,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          90.20140938384631,\n          40.0,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Electric Utility\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5863.728211046649,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          51.24290353620399,\n          65.0,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Expected Price\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 5865.482742203276,\n        \"min\": 0.0,\n        \"max\": 16628.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          37.685429934427944,\n          31.67,\n          16628.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":39}],"source":["df.describe()"]},{"cell_type":"code","source":[],"metadata":{"id":"YPxTmLfeU6RP"},"execution_count":null,"outputs":[]}]}